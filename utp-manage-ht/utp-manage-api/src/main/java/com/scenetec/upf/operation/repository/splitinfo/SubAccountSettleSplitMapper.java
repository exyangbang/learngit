package com.scenetec.upf.operation.repository.splitinfo;

import com.scenetec.upf.operation.model.vo.SubAccountSettleSplitVO;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Select;
import org.springframework.stereotype.Repository;
import com.github.pagehelper.Page;

import java.util.List;
import java.util.Map;

/**
 * @author scenetec
 */
@Repository
@Mapper
public interface SubAccountSettleSplitMapper {

    @Select("<script> "
            + "SELECT " 
            + "d.id,"
            + "d.trans_order_ids as transOrderIds,"
            + "d.batch_no as batchNo," 
            + "d.settle_date as settleDate," 
            + "d.industry_code as industryCode," 
            + "i.name as industryName," 
            + "d.client_trans_id as clientTransId," 
            + "d.user_account as payerSubAccount," 
            + "case WHEN a.obj_type = '2' "
            + " then m1.real_name "
            + " else a.obj_name "
            + "end as payerSubAccountName,"
            + "d.sub_account as payeeSubAccount," 
            + "case WHEN b.obj_type = '2' "
            + " then m2.real_name "
            + " else b.obj_name "
            + "end as payeeSubAccountName,"
            + "d.amount as amount," 
            + "d.settle_mode as settleMode," 
            + "d.period as period," 
            + "d.status as status,"
            + "d.trans_status as transStatus," 
            + "d.trans_desc as transDesc," 
            + "d.remark as remark," 
            + "d.gmt_create as gmtCreate "
            + "from t_upload_subaccount_settle_split_detail d "
            + "LEFT JOIN t_account a ON a.account = d.user_account "
            + "LEFT JOIN t_account b on b.account = d.sub_account "
            + "LEFT JOIN t_merchant_info m1 on m1.account = d.user_account "
            + "LEFT JOIN t_merchant_info m2 on m2.account = d.sub_account "
            + "LEFT JOIN t_industry i on i.code = d.industry_code "
            + "WHERE 1 = 1 "
            + "<if test='params.beginSettleDate != null'> and d.settle_date &gt;= #{params.beginSettleDate}</if>"
            + "<if test='params.endSettleDate != null'> and d.settle_date &lt;= #{params.endSettleDate}</if>"
            + "<if test='params.industryCode != null'> and d.industry_code = #{params.industryCode}</if>"
            + "<if test='params.payerSubAccount != null'> and d.user_account = #{params.payerSubAccount}</if>"
            + "<if test='params.payeeSubAccount != null'> and d.sub_account = #{params.payeeSubAccount}</if>"
            + "<if test='params.batchNo != null'> and d.batch_no = #{params.batchNo}</if>"
            + "<if test='params.status != null'> and d.status = #{params.status}</if>"
            + "<if test='params.transStatus != null'> and d.trans_status = #{params.transStatus}</if>"
            + "UNION "
            + "SELECT "
            + "d.id,"
            + "d.trans_order_ids as transOrderIds,"
            + "d.batch_no as batchNo," 
            + "d.settle_date as settleDate," 
            + "d.industry_code as industryCode," 
            + "i.`name` as industryName," 
            + "d.client_trans_id as clientTransId," 
            + "d.payer_sub_account as payerSubAccount," 
            + "case WHEN a.obj_type = '2' "
            + " then m1.real_name "
            + " else a.obj_name "
            + " end as payerSubAccountName,"
            + "d.payee_sub_account as payeeSubAccount," 
            + "case WHEN b.obj_type = '2' "
            + " then m2.real_name "
            + " else b.obj_name "
            + " end as payeeSubAccountName,"
            + "d.amount as amount," 
            + "d.settle_mode as settleMode," 
            + "d.period as period," 
            + "d.STATUS as status," 
            + "d.trans_status as transStatus," 
            + "d.trans_desc as transDesc," 
            + "d.remark as remark," 
            + "d.gmt_create as gmtCreate "
            + "from t_upload_subaccount_multi_settle_detail d "
            + "LEFT JOIN t_account a ON a.account = d.payer_sub_account "
            + "LEFT JOIN t_account b on b.account = d.payee_sub_account "
            + "LEFT JOIN t_merchant_info m1 on m1.account = d.payer_sub_account "
            + "LEFT JOIN t_merchant_info m2 on m2.account = d.payee_sub_account "
            + "LEFT JOIN t_industry i on i.code = d.industry_code "
            + "WHERE 1 = 1 "
            + "<if test='params.beginSettleDate != null'> and d.settle_date &gt;= #{params.beginSettleDate}</if>"
            + "<if test='params.endSettleDate != null'> and d.settle_date &lt;= #{params.endSettleDate}</if>"
            + "<if test='params.industryCode != null'> and d.industry_code = #{params.industryCode}</if>"
            + "<if test='params.payerSubAccount != null'> and d.payer_sub_account = #{params.payerSubAccount}</if>"
            + "<if test='params.payeeSubAccount != null'> and d.payee_sub_account = #{params.payeeSubAccount}</if>"
            + "<if test='params.batchNo != null'> and d.batch_no = #{params.batchNo}</if>"
            + "<if test='params.status != null'> and d.status = #{params.status}</if>"
            + "<if test='params.transStatus != null'> and d.trans_status = #{params.transStatus}</if>"
            + " </script>")
    Page<SubAccountSettleSplitVO> list(@Param("params") Map<String, Object> params);

    @Select("<script> "
            + "select count(1) as total, IFNULL(sum(tmp.amount),0) as totalAmount from "
            + "(SELECT "
            + "d.id, "
            + "d.amount as amount "
            + "from t_upload_subaccount_settle_split_detail d LEFT JOIN t_account a ON a.account = d.user_account "
            + "LEFT JOIN t_account b on b.account = d.sub_account "
            + "LEFT JOIN t_industry i on i.code = d.industry_code "
            + "WHERE 1 = 1 "
            + "<if test='params.beginSettleDate != null'> and d.settle_date &gt;= #{params.beginSettleDate}</if>"
            + "<if test='params.endSettleDate != null'> and d.settle_date &lt;= #{params.endSettleDate}</if>"
            + "<if test='params.industryCode != null'> and d.industry_code = #{params.industryCode}</if>"
            + "<if test='params.payerSubAccount != null'> and d.user_account = #{params.payerSubAccount}</if>"
            + "<if test='params.payeeSubAccount != null'> and d.sub_account = #{params.payeeSubAccount}</if>"
            + "<if test='params.batchNo != null'> and d.batch_no = #{params.batchNo}</if>"
            + "<if test='params.status != null'> and d.status = #{params.status}</if>"
            + "<if test='params.transStatus != null'> and d.trans_status = #{params.transStatus}</if>"
            + "UNION "
            + "SELECT "
            + "d.id, "
            + "d.amount as amount "
            + "from t_upload_subaccount_multi_settle_detail d LEFT JOIN t_account a ON a.account = d.payer_sub_account "
            + "LEFT JOIN t_account b on b.account = d.payee_sub_account "
            + "LEFT JOIN t_industry i on i.code = d.industry_code "
            + "WHERE 1 = 1 "
            + "<if test='params.beginSettleDate != null'> and d.settle_date &gt;= #{params.beginSettleDate}</if>"
            + "<if test='params.endSettleDate != null'> and d.settle_date &lt;= #{params.endSettleDate}</if>"
            + "<if test='params.industryCode != null'> and d.industry_code = #{params.industryCode}</if>"
            + "<if test='params.payerSubAccount != null'> and d.payer_sub_account = #{params.payerSubAccount}</if>"
            + "<if test='params.payeeSubAccount != null'> and d.payee_sub_account = #{params.payeeSubAccount}</if>"
            + "<if test='params.batchNo != null'> and d.batch_no = #{params.batchNo}</if>"
            + "<if test='params.status != null'> and d.status = #{params.status}</if>"
            + "<if test='params.transStatus != null'> and d.trans_status = #{params.transStatus}</if>"
            + ") tmp </script>")
    Map<String, Long> countTotal(@Param("params") Map<String, Object> params);
}
